name: Add Issue/PR to the project

on:
  workflow_dispatch:
    inputs:
      node_id:
        type: string
        required: true
      repo:
        type: string
        required: true
      project_number:
        type: number
        required: true

  workflow_call:
    secrets:
       APP_ID:
         required: false
       CLIENT_PEM:
         required: false
    inputs:
      node_id:
        required: true
        type: string
      repo:
        type: string
        required: true
      project_number:
        type: string
        required: true

jobs:
  add-to-project:
    runs-on: ubuntu-latest
    steps:
      - run: echo '${{ toJSON( github ) }}'
      - uses: actions/checkout@v2
        with:
          repository: timewarpinc/actions
      - name: Get Project Info
        id: project_info
        uses: ./.github/actions/project-info
        with:
          APP_ID: ${{ secrets.APP_ID }}
          CLIENT_PEM: ${{ secrets.CLIENT_PEM }}
          project_number: ${{ inputs.project_number }}
      - name: Assign Issue/PR to project
        uses: actions/github-script@v5
        with:
          github-token: ${{ steps.project_info.outputs.token }}
          script: |
            const owner = context.repo.owner;
            const repo = context.payload.inputs.repo || context.repo.repo;
            const node_id = ${{ toJSON(inputs.node_id) }};
            console.log({${{ toJSON(steps) }})
            const project = (${{ toJSON(steps.project_info.outputs.node_id) }});

            const query = `
              mutation($project:ID!, $id:ID!) {
                addProjectNextItem(input: {projectId: $project, contentId: $id}) {
                  projectNextItem {
                    id
                  }
                }
              }
            `;
            
            const variables = {
              project: project,
              id: node_id,
            }
            const result = await github.graphql(query, variables)
            console.log(result)
